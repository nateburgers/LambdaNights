#+AUTHOR: Nathan Burgers
#+TITLE: Lambda Nights
#+STARTUP: showall
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="assets/style.css"/>
#+OPTIONS: toc:1 num:nil <:nil

* Night 1: Introduction to Standard-ML
  Before we get started please install a Standard-ML interpreter like the
  [[http://smlnj.org][Standard-ML of New Jersey]], or alternative you can edit Standard-ML
  online [[http://www.tutorialspoint.com/execute_smlnj_online.php][at this website]].
** Expressions
  The basic units of computation in Standard-ML are Expressions.
  Try entering some familiar math expressions into your SML interpreter
  like the following:
  #+BEGIN_SRC sml
  2 + 2
  #+END_SRC
  Your interpreter should have spit out something like =val it : int = 4=.
  Let's examine what it means by that.

** Values
  If we want to save the result of an expression for later, we
  can store it in a =value=. Since 5 is such a useful number and
  we don't want to compute it over and over, we can give the expression
  a name to refer to later.
  #+BEGIN_SRC sml
    val useful_number = 2 + 2
  #+END_SRC
  We can now re-use this very /useful number/ in other expressions.
  #+BEGIN_SRC sml
    val other_number = useful_number * 2
  #+END_SRC

* Night 2: To Be Continued
